import{d as r,a as e,b as t,c as a,e as i,f as o,g as s}from"../_/a2f1cd97.js";import"assert-plus";import"safer-buffer";import"crypto";import"util";import"tweetnacl";import"ecc-jsbn";import"ecc-jsbn/lib/ec";import"jsbn";import"stream";import"asn1";import"../_/c9ccaf7b.js";import"bcrypt-pbkdf";import"buffer";var p={},n=false;function dew(){if(n)return p;n=true;var c=r();var f=e();var m=t();var y=a();var d=i();var E=o();var g=s();p={Key:c,parseKey:c.parse,Fingerprint:f,parseFingerprint:f.parse,Signature:m,parseSignature:m.parse,PrivateKey:y,parsePrivateKey:y.parse,generatePrivateKey:y.generate,Certificate:d,parseCertificate:d.parse,createSelfSignedCertificate:d.createSelfSigned,createCertificate:d.create,Identity:E,identityFromDN:E.parseDN,identityForHost:E.forHost,identityForUser:E.forUser,identityForEmail:E.forEmail,identityFromArray:E.fromArray,FingerprintFormatError:g.FingerprintFormatError,InvalidAlgorithmError:g.InvalidAlgorithmError,KeyParseError:g.KeyParseError,SignatureParseError:g.SignatureParseError,KeyEncryptedError:g.KeyEncryptedError,CertificateParseError:g.CertificateParseError};return p}const c=dew();var f=c.Key,m=c.parseKey;export{f as Key,c as default,m as parseKey};

